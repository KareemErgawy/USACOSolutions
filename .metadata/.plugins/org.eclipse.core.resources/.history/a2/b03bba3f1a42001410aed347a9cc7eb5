/*
 ID: kareem_2
 PROG: hamming
 LANG: C++
 */
#include <iostream>
#include <fstream>
using namespace std;

int n;
int* solution;

int calculateDistance2(int x, int y) {
	int xOr = x ^ y;
	int distance = 0;
	while (xOr != 0) {
		xOr = (xOr ^ (xOr & -xOr));
		distance++;
	}
	return distance;
}

void search(int index, int start) {
	if (index == n) {
		return;
	}

	for(int )
}

int main() {
	int b, d;
	ifstream fin("hamming.in");
	ofstream fout("hamming.out");

	fin >> n >> b >> d;
	int maxVal = 2 << d;
	int** distance = new int*[maxVal];

	for (int i = 0; i < maxVal; i++) {
		distance[i] = new int[maxVal];
		for (int j = i + 1; j < maxVal; j++) {
			distance[i][j] = calculateDistance2(i, j);
		}
	}

	solution = new int[n];
	solution[0] = 0;

	return 0;
}
