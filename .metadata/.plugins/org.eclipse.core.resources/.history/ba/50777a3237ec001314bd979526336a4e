/*
 ID: kareem_2
 PROG: kimbits
 LANG: C++
 */
#include <iostream>
#include <fstream>
#include <queue>
#include <set>
using namespace std;

long next(long x) {
	long b = x & -x;
	long t = x + b;
	long c = x ^ t;
	long m = (c >> 2) / b;
	return t | m;
}

int main() {

	ifstream fin("kimbits.in");
	ofstream fout("kimbits.out");

	int n, l, i;

	fin >> n >> l >> i;

	set<long, less<long> > undiscovered;
	for (int j = 0; j < l; j++) {
		undiscovered.insert((1 << (j + 1)) - 1);
	}

	long smallest;
	for (int j = 0; j < i - 1; j++) {
		smallest = *undiscovered.begin();
		long nextNum = next(smallest);
		undiscovered.insert(nextNum);
		undiscovered.erase(smallest);
	}

	char* numStr = new char[n];
	for (int j = 0; j < n; j++) {
		numStr[j] = '0';
	}

	int j = 0;
	while (smallest > 0) {
		numStr[j] = (smallest & 1) + '0';
		smallest = smallest >> 1;
		j++;
	}

	for (int j = n - 1; j >= 0; j--) {
		cout << numStr[j];
	}

	cout << endl;
	return 0;
}
