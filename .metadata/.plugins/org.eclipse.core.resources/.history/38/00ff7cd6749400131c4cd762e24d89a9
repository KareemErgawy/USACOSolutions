/*
 ID: kareem_2
 PROG: money
 LANG: C++
 */
#include <iostream>
#include <fstream>
using namespace std;

typedef long long ll;

int v;
int n;
ll* dp;
int* coins;
int smallestCoin = 10000;
ll search(int n) {
	if (dp[n] != -1) {
		return dp[n];
	}

	if (n == smallestCoin) {
		dp[n] = 1;
		return 1;
	}

	if (n < smallestCoin) {
		dp[n] = 0;
		return 0;
	}

	dp[n] = 0;

	for (int i = 0; i < v; i++) {
		if (n >= coins[i]) {
			dp[n] += (search(coins[i]) + search(n - coins[i]));
		}
	}

	return dp[n];
}

int main() {
	ifstream fin("money.in");
	ofstream fout("money.out");

	fin >> v >> n;

	dp = new ll[n + 1];

	for (int i = 0; i <= n; i++) {
		dp[i] = -1;
	}

	coins = new int[v];

	for (int i = 0; i < v; i++) {
		fin >> coins[i];
		smallestCoin = (smallestCoin < coins[i]) ? smallestCoin : coins[i];
	}

	cout << search(n) << endl;

	return 0;
}
